name: Test and Deploy

on:
    push:
        branches:
            - '**'

jobs:
    frontend-test:

        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [16.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'
            - run: npm run install:frontend
            - run: npm run test:frontend:unit

    functions-test:

        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [16.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'
            - run: npm run install:functions
            - run: npm run test:functions

    build-and-deploy:
        runs-on: ubuntu-latest
        needs: [frontend-test, functions-test]
        if: github.ref == 'refs/heads/main'

        strategy:
            matrix:
                node-version: [16.x]
                
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'
            - name: Build and Deploy
              run: |
                npm run install:frontend
                npm run install:functions
                echo "${{ secrets.CONFIG }}" > functions/src/app_config.json
                cat functions/src/app_config.json
                npm run build:functions
                npm run build:frontend
                curl -sL https://firebase.tools | bash
                firebase deploy --token ${{ secrets.FIREBASE_TOKEN }}
